{"version":3,"sources":["context/TaskListContext.js","components/TaskForm.js","components/Header.js","components/Task.js","components/TaskList.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","useEffect","setItem","stringify","editItem","setEditItem","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","TaskForm","useContext","setTitle","onSubmit","e","preventDefault","className","onChange","target","type","placeholder","required","onClick","Header","Task","TaskList","length","key","App","ReactDOM","render","document","getElementById"],"mappings":"+MAEaA,EAAgBC,0BAmCdC,EAlCe,SAAAC,GAC1B,IAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,WAAW,GAD7B,EAEZC,mBAASL,GAFG,mBAE5BM,EAF4B,KAEtBC,EAFsB,KAGjCC,qBAAU,WACNL,aAAaM,QAAQ,QAAQR,KAAKS,UAAUJ,MAC5C,CAACA,IAL4B,MAMND,mBAAS,MANH,mBAM5BM,EAN4B,KAMnBC,EANmB,KA0BjC,OACD,kBAAChB,EAAgBiB,SAAjB,CAA0BC,MAAO,CAACR,QAAMS,QAnB3B,SAACC,GACXT,EAAS,GAAD,mBAAKD,GAAL,CAAW,CAACU,QAAMC,GAAGC,mBAkBgBC,WAhBhC,SAAAF,GACbV,EAASD,EAAMc,QAAO,SAAAC,GAAI,OAAEA,EAAKJ,KAAKA,OAekBK,UAb5C,WACZf,EAAS,KAaZgB,SAXc,SAAAN,GACX,IAAMO,EAAKlB,EAAMmB,MAAK,SAAAJ,GAAI,OAAEA,EAAKJ,KAAKA,KACtCL,EAAYY,IASNE,SAPK,SAACV,EAAMC,GAClB,IAAMU,EAASrB,EAAMsB,KAAI,SAAAP,GAAI,OAAGA,EAAKJ,KAAKA,EAAI,CAACD,QAAMC,MAAII,KACzDd,EAASoB,GACTf,EAAY,OAIGD,aACbZ,EAAM8B,WCOCC,EArCE,WAAO,IAAD,EACyBC,qBAAWnC,GAAhDmB,EADY,EACZA,QAAQO,EADI,EACJA,UAAUX,EADN,EACMA,SAASe,EADf,EACeA,SADf,EAEIrB,mBAAS,IAFb,mBAEZW,EAFY,KAENgB,EAFM,KAyBnB,OARAxB,qBAAU,WAEFwB,EADU,OAAXrB,EACUA,EAASK,MAET,MAGf,CAACL,IAEA,0BAAMsB,SAnBY,SAAAC,GACjBA,EAAEC,iBACY,OAAXxB,GACHI,EAAQC,GACRgB,EAAS,KAELN,EAASV,EAAML,EAASM,KAaEmB,UAAU,QACrC,2BAAOC,SAxBM,SAAAH,GAChBF,EAASE,EAAEI,OAAOxB,QAuBgBA,MAAOE,EAAOuB,KAAK,OAAOH,UAAU,aAAaI,YAAY,aAAaC,UAAQ,IACjH,yBAAKL,UAAU,WAC1B,4BAAQG,KAAK,SAASH,UAAU,oBAAoBzB,EAAS,YAAY,cACzE,4BAAQ+B,QAAS,kBAAIpB,KAAYc,UAAU,iBAA3C,YCtBeO,EARA,WACX,OACI,yBAAKP,UAAU,UACX,8CCcGQ,EAjBF,SAAC,GAAY,IAAXvB,EAAU,EAAVA,KAAU,EACOU,qBAAWnC,GAAhCuB,EADc,EACdA,WAAWI,EADG,EACHA,SAClB,OACI,wBAAIa,UAAU,aACV,8BAAOf,EAAKL,OACZ,6BACI,4BAAQ0B,QAAS,kBAAIvB,EAAWE,EAAKJ,KAAKmB,UAAU,mBACnD,uBAAGA,UAAU,sBAEd,4BAAQM,QAAS,kBAAInB,EAASF,EAAKJ,KAAKmB,UAAU,iBACjD,uBAAGA,UAAU,mBCWfS,EAnBE,WAAO,IACbvC,EAAOyB,qBAAWnC,GAAlBU,MACP,OACA,6BACKA,EAAMwC,OACJ,wBAAIV,UAAU,QACT9B,EAAMsB,KAAI,SAACP,GACV,OAAO,kBAAC,EAAD,CAAMA,KAAMA,EAAM0B,IAAK1B,EAAKJ,SAI5C,yBAAKmB,UAAU,YAAf,cCQOY,EAjBH,WACR,OACI,kBAAC,EAAD,KACI,yBAAKZ,UAAU,aACX,yBAAKA,UAAU,eACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,EAAD,WCXxBa,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAC3B,U","file":"static/js/main.bb008d6b.chunk.js","sourcesContent":["import React ,{createContext,useState,useEffect}from 'react'\r\nimport {v1 as uuid} from 'uuid'\r\nexport const TaskListContext=createContext()\r\nconst TaskListContextProvider=props=>{\r\n    const initialState=JSON.parse(localStorage.getItem(\"tasks\"))||[]\r\n  const [tasks,setTasks]=useState(initialState)\r\n    useEffect(() => {\r\n        localStorage.setItem('tasks',JSON.stringify(tasks))\r\n      },[tasks])\r\n  const [editItem,setEditItem]=useState(null)\r\n \r\n  const addTask=(title)=>{\r\n      setTasks([...tasks,{title,id:uuid()}])\r\n  }\r\n  const removeTask=id=>{\r\n      setTasks(tasks.filter(task=>task.id!==id))\r\n  }\r\n  const clearList=()=>{\r\n      setTasks([]);\r\n  }\r\n  const findItem=id=>{\r\n      const item=tasks.find(task=>task.id===id);\r\n      setEditItem(item);\r\n  }\r\n  const editTask=(title,id)=>{\r\n      const newTasks=tasks.map(task=>(task.id===id)?{title,id}:task);\r\n      setTasks(newTasks);\r\n      setEditItem(null);\r\n  }\r\n    return (\r\n   <TaskListContext.Provider value={{tasks,addTask,removeTask,clearList,\r\n   findItem,editTask,editItem}}>\r\n       {props.children}\r\n   </TaskListContext.Provider>\r\n\r\n    )\r\n};\r\nexport default TaskListContextProvider;","import React,{useContext,useState,useEffect} from 'react'\r\nimport {TaskListContext} from '../context/TaskListContext'\r\nconst TaskForm = () => {\r\n    const {addTask,clearList,editItem,editTask}=useContext(TaskListContext);\r\n    const [title,setTitle]=useState(\"\")\r\n    const handleChange= e => {\r\n        setTitle(e.target.value);\r\n        \r\n    };\r\n    const handleSubmit = e=> {\r\n        e.preventDefault();\r\n        if(editItem===null){\r\n        addTask(title);\r\n        setTitle(\"\");\r\n        } else{\r\n            editTask(title,editItem.id);\r\n        }\r\n        \r\n    };\r\n    useEffect(()=>{\r\n        if(editItem!==null){\r\n            setTitle(editItem.title)\r\n        } else{\r\n            setTitle(\"\");\r\n        }\r\n\r\n    },[editItem]);\r\n    return (\r\n       <form onSubmit={handleSubmit}  className=\"form\">\r\n           <input onChange={handleChange} value={title} type=\"text\" className=\"task-input\" placeholder=\"Add a task\" required/>\r\n           <div className=\"buttons\">\r\n<button type=\"submit\" className=\"btn add-task-btn\">{editItem?\"Edit Task\":\"Add a Task\"}</button>\r\n<button onClick={()=>clearList()}className=\"btn clear-btn\">clear</button>\r\n\r\n           </div>\r\n       </form>\r\n    )\r\n}\r\n\r\nexport default TaskForm\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Task Manager</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{useContext} from 'react'\r\nimport {TaskListContext} from '../context/TaskListContext'\r\nconst Task = ({task}) => {\r\n    const {removeTask,findItem}=useContext(TaskListContext);\r\n    return (\r\n        <li className=\"list-item\">\r\n            <span>{task.title}</span>\r\n            <div>\r\n                <button onClick={()=>removeTask(task.id)} className=\"btn-delete task\">\r\n                 <i className=\"fas fa-trash-alt\"></i>\r\n                </button>\r\n                <button onClick={()=>findItem(task.id)} className=\"btn-edit task\">\r\n                 <i className=\"fas fa-pen\"></i>\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React,{useContext} from 'react';\r\nimport {TaskListContext} from '../context/TaskListContext';\r\nimport Task from './Task';\r\n\r\nconst TaskList = () => {\r\n    const {tasks}=useContext(TaskListContext);\r\n    return (\r\n    <div>\r\n        {tasks.length?\r\n           <ul className=\"list\">\r\n               {tasks.map((task) =>{\r\n                 return <Task task={task} key={task.id} /> ;\r\n})}\r\n        </ul> \r\n    :(\r\n        <div className=\"no-tasks\">No Tasks</div>\r\n    )\r\n}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react'\r\nimport \"../App.css\"\r\nimport TaskForm from \"./TaskForm\";\r\nimport Header from \"./Header\"\r\nimport TaskList from './TaskList'\r\nimport TaskListContextProvider from \"../context/TaskListContext\";\r\nconst App = () => {\r\n    return (\r\n        <TaskListContextProvider>\r\n            <div className=\"container\">\r\n                <div className=\"app-wrapper\">\r\n                    <Header />\r\n                    <div className=\"main\">\r\n                        <TaskForm/>\r\n                        <TaskList />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </TaskListContextProvider>\r\n    );\r\n    \r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/App\";\r\nReactDOM.render(<App/>,document.getElementById\r\n    (\"root\"));"],"sourceRoot":""}